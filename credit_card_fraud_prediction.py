# -*- coding: utf-8 -*-
"""credit-card-fraud-prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gG8ANRJzTe_GfiuBEPdNchICwgTTt7P3
"""

import numpy as np
import pandas as pd

df=pd.read_csv('/content/creditcard.csv')

df.head()

df.isnull().sum()

df.info()

df.duplicated().sum()

import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(6,4))
sns.countplot(df,x='Class',palette="Set1")
plt.title("Distribution of transactions Fraud vs Not Fraud")
plt.show()

fraud_pct = df["Class"].mean() *100
print(f"Percentage of fraud: {fraud_pct:.4f}%")

num_cols=["Time","Amount"]
for col in num_cols:
    plt.figure(figsize=(8,4))
    sns.histplot(df[col], kde=True, bins=30)
    plt.title(f"Distribution of {col}")
    plt.show()

fraud=df[df['Class']==1]
normal=df[df['Class']==0]
print(fraud.shape,normal.shape)

fraud.Amount.describe()

normal.Amount.describe()

df.groupby('Class').mean()

normal_sample=normal.sample(n=492)

new_df=pd.concat([normal_sample,fraud],axis=0)

new_df.head()

new_df['Class'].value_counts()

new_df.groupby('Class').mean()

x=new_df.drop(['Class'],axis=1)
y=new_df['Class']

from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,stratify=y,random_state=2)

print(x.shape,x_train.shape,x_test.shape)

from xgboost import XGBClassifier
from sklearn.metrics import classification_report, confusion_matrix, average_precision_score

model=XGBClassifier()
model.fit(x_train,y_train)
y_predict = model.predict(x_test)

y_pred_prob=model.predict_proba(x_test)[:,1]

y_pred_prob

cm=confusion_matrix(y_test,y_predict)
sns.heatmap(cm,annot=True,fmt='d',cmap='Blues')
plt.xlabel('predicted')
plt.ylabel('Actual')
plt.show()

auc_pr = average_precision_score(y_test, y_pred_prob)
print(f"Area Under the Precision-Recall Curve:Â {auc_pr:.4f}")